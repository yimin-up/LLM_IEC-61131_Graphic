Designing a complex non-linear model-predictive controller (MPC) for optimizing the startup of a steam generator in a power plant falls beyond what can be effectively represented in a Ladder Diagram (LD). Ladder Logic is fundamentally designed for more straightforward, logic-based control rather than implementing complex algorithms like those found in MPC, which requires handling complex mathematical computations, predictions, and optimizations over a set horizon.

MPC involves predicting future plant behavior using a mathematical model and solving an optimization problem at each control step to find the optimal control action. These tasks demand capabilities (like floating-point arithmetic, matrix operations, and solving optimization problems) that are not directly supported in the simple, contact-and-coil syntax of Ladder Logic.

However, for the purpose of educational simplicity and visual representation, I'll outline a simplified approach focusing on integrating basic elements critical to initiating the startup process of a steam generator. This involves monitoring temperatures, pressures, and water levels, and controlling valves or pumps based on those readings. A true MPC implementation would be developed in a more capable programming environment or language supported by IEC 61131-3, such as Structured Text (ST) or Continuous Function Chart (CFC) and then possibly interfaced or supervised via simpler LD elements for manual overrides or simple logic controls.

```plaintext
(Start of Simplified Ladder Diagram for Educational Representation)
|                                                      |
|   Temp_Sensor       Pressure_Sensor     Water_Level  |
|   (AI_1)                  (AI_2)            (AI_3)   |
|       |                       |                |     |
|       V                       V                V     |
+-------[ ]---------------------[ ]--------------[ ]---+
|       |                       |                |     |
|      Temp_OK                Pressure_OK      Level_OK|
|      (M1)                    (M2)             (M3)   |
|       |                       |                |     |
|       +-----------------------+----------------+    |
|       |                       |                |    |
|       V                       V                V    |
+-------( )---------------------( )--------------( )---+ Control_Logic_for_Startup
|                                                      |
|   Start_Steam_Generator     Stop_Steam_Generator    |
|          (M4)                       (M5)             |
|           |                          |               |
|           V                          V               |
+-----------( )------------------------[ ]-------------+
|                                                      |
(End of Simplified Ladder Diagram)
```

This simplistic diagram represents the logic to monitor essential parameters and control elements involved in the startup of a steam generator. If `Temp_OK` (M1), `Pressure_OK` (M2), and `Level_OK` (M3) are all true, the `Control_Logic_for_Startup` can engage the `Start_Steam_Generator` mechanism (M4). If any conditions are not met, or if a stop condition is signaled, the `Stop_Steam_Generator` (M5) can be engaged.

Remember, actual MPC implementation for such a critical and complex system as a steam generator startup would require an appropriately sophisticated programming approach, capable of handling the model's predictive and optimization computations.