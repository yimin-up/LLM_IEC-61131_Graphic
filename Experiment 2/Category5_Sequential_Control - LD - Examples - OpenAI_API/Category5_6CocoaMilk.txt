We'll start by outlining the ISA-88 batch recipe for 100kg of cocoa milk production, then translate that into a simplified IEC 61131-3 Ladder Diagram program for the control logic.

### ISA-88 Batch Recipe for 100kg Cocoa Milk Production

**Ingredients:**
- Milk: 70kg
- Water: 10kg
- Liquid Sugar: 10kg
- Cocoa: 10kg

**Process Steps:**
1. Fill the mixing and blending vessel with milk.
2. Heat milk to 60°„C.
3. Add water and liquid sugar to the vessel.
4. Heat the mixture to 75°„C.
5. Add cocoa while stirring continuously.
6. Mix for 15 minutes at 75°„C.
7. Cool down the mixture to 40°„C.
8. Transfer to storage.

**Equipment:** 
- Mixing and blending vessel with stirring and heating capability.

Now, let's create a very basic and high-level Ladder Diagram program focusing on the sequential control aspects of the mixing process. Real-world application would require more sophisticated safety checks, error handling, and interfacing with temperature sensors and heating elements, which are not covered in this simplified version.

### Ladder Diagram Program for Mixing Process

#### Assumptions:
- Each step is controlled by start conditions and moves to the next step once the conditions for the current step are met.
- The program cycle represents the sequential logic and will not loop back once completed.
- `Sensors` and `Actuators` are placeholders for actual device I/O addresses in a real PLC program.
- `TIMER_ON` is used as a simplified representation to indicate time-controlled steps.

```
(Start of Ladder Diagram)
|                                                                               |
|       Start_Process               Step1_Complete        Valve_Milk_Open       |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
|       Heat_to_60C               Step2_Complete        Heater_On               |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
|       Add_Water_and_Sugar       Step3_Complete        Valves_Water_Sugar_Open |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
|       Heat_to_75C               Step4_Complete        Heater_Increased        |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
|       Add_Cocoa                 Step5_Complete        Valve_Cocoa_Open        |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
|       Mix_15_Min                Step6_Complete        Mixer_On                |
+-----------|/|------------------| TMR |-----------------( )--------------------+
|                                15min                  |
|       Cool_to_40C               Step7_Complete        Cooler_On               |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
|       Transfer_to_Storage       Step8_Complete        Transfer_Pump_On        |
+-----------|/|------------------------------------------( )--------------------+
|                                                                               |
(End of Ladder Diagram)
```

#### Note:
- This diagram representation uses simple conditions (`StepN_Complete`) as placeholders to indicate the completion of each step before moving to the next. In practice, these would be actual checks for temperature sensor readings, timers, and levels inside the vessel.
- For simplicity, interlocks, safety checks, and actual wait times or temperature values are not depicted but would be crucial in a real-world program.
- `TMR` is used to represent a timer that controls the mixing duration.
- Electrical symbols like `( )` represent coil, indicating an output activation command (e.g., to open a valve, turn on a heater), and `|/|` represents normally closed contact for start button where logic inverts (stops when pressed).

This simplified example introduces how PLC logic might control the process, but remember, actual applications will involve significant complexities, including PID control for temperatures, interlock and safety logic, and precise handling of error states.