Creating a PID feedback control for a gas turbine's temperature using the Sequential Function Chart (SFC) programming language, as defined in IEC 61131-3, involves the design of several elements: steps, transitions, actions, and linking these elements to form the logic of PID control. Your PID control will adjust the valve opening based on the difference between the setpoint and the actual temperature to maintain the desired temperature.

Here, I'm providing a conceptual representation in ASCII art. Keep in mind, actual PLC programming also would involve creating the variables, and PID function blocks typically provided by the PLC manufacturer's software, and linking them to the inputs/outputs and the elements of this SFC.

Given the limitations of representing this in text and ASCII art, this is a simplified overview meant to show the structure and flow without detailed PID algorithm specifics or platform-specific syntax.

**System Overview:**

1. **Initialization**: Set initial parameters; ensure safe states.
2. **Read Inputs**: Measure the current temperature.
3. **PID Control**: Calculate the error (difference between setpoint and actual temperature), apply the PID algorithm to determine the correct valve opening.
4. **Write Outputs**: Adjust the inlet valve opening.
5. **Monitor**: Check for system changes requiring adjustment or halting.

**Sequential Function Chart**:

```
[Initialization]                  [Read Inputs]
     (S1)                              (S2)
       |                                |
       v                                v
+------------+  T1          +-------------+  T2        +-------------+
| Initialize |-----------> | Measure Temp|----------> | PID Control |
+------------+             +-------------+            +-------------+
       ^                                |                    |
       |                                v                    |
       |                          [Write Outputs]            |
       |                                (S4)                 v
       +----------------------------<----------<----------< [Monitor]
                                                           (S5)
                                                             |
                                                             |
                                                             +---->[Transition to S2 or Halt]
```

**Steps**:
- S1: Initialize system variables, ensure valve is in a safe start position.
- S2: Read current temperature from the turbine sensor.
- S3: Apply the PID control algorithm.
- S4: Adjust the valve opening based on PID output.
- S5: Monitor for any system changes requiring action or to ensure PID is within safe operation parameters.

**Transitions** (Conditions to move from one step to another):
- T1: Initialization complete.
- T2: Current temperature successfully read.
- T3: PID control calculation complete.
- T4: Valve adjustment command sent.
- T5: System requires reevaluation (continuous loop back to read inputs) or meets halt criteria.

This abstract description must be adapted with specific PID function blocks, input/output addressing, and system-specific safety checks for a real application. The actual implementation requires using a PLC programming environment to encode the SFC, integrate PID blocks, define transitions based on process variables, and handle all device IO communications.