Creating a fully self-contained IEC 61131-3 Sequential Function Chart (SFC) program in a textual way, aimed at implementing feedforward control to adjust the speed of a conveyor belt based on predicted load from sensor data, involves outlining the structure of the SFC steps, transitions, actions, and their logical connections based on the IEC standard. Although actual SFC programming and its detailed graphical representation are typically done within specific PLC programming environments, here is a textual representation that outlines the logic and control flow:

```plaintext
(Program Start)

[Step1: Initialize]
    - Action: Set conveyor speed to initial value.
    - Transition condition to next step: TRUE (Proceed immediately to checking load)

[Step2: CheckLoad]
    - Action: Read sensor data.
    - Transition condition to next step: TRUE (Constantly evaluate load)

[Decision: AdjustSpeed]
    - Decision based on sensor data:
        If Load <= Low_Threshold then Proceed to [LowLoad]
        If Load > Low_Threshold AND Load <= High_Threshold then Proceed to [NormalLoad]
        If Load > High_Threshold then Proceed to [HighLoad]

[LowLoad]
    - Action: Decrease conveyor speed (Slow).
    - Transition: After adjusting, Transition back to [CheckLoad]

[NormalLoad]
    - Action: Set conveyor speed to normal.
    - Transition: After adjusting, Transition back to [CheckLoad]

[HighLoad]
    - Action: Increase conveyor speed (Fast).
    - Transition: After adjusting, Transition back to [CheckLoad]

(Program End)
```

This ASCII representation illustrates the SFC's structure for managing conveyor belt speed based on the load. The actual IEC 61131-3 compliant program would require specific syntax depending on the PLC programming tool or software used, and details such as the exact speed values, the thresholds for load detection, and sensor data processing would be implemented with the specific programming constructs available in that environment (such as ladder logic, structured text, or another graphical programming). Additionally, actual implementation would require defining variables for sensors (`Load`), conveyor speed (`Speed`), and thresholds (`Low_Threshold`, `High_Threshold`) alongside any necessary interlocks or safety conditions to ensure proper machine operation and safety compliance.