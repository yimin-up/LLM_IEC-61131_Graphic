Implementing a PID feedback control system for managing the pressure in a chemical reactor using a Sequential Function Chart (SFC) according to the IEC 61131-3 standard requires defining steps, transitions, and actions associated with each step. For simplicity, our example doesn't delve into the specifics of PID algorithm tuning parameters (Proportional, Integral, and Derivative gains) which are critical in practice but instead focuses on structuring the SFC to showcase how control flow can be managed.

Let's assume a system where:
- A sensor `P` reads the reactor pressure.
- A control valve `V` can modulate to adjust the pressure (the actuator).
- The system aims to maintain the pressure at a setpoint `SP`.
- A PID controller calculates the necessary adjustment to the valve position based on the error between the setpoint and the measured pressure.

SFC Program Structure (ASCII Art Representation):

```
(Start of Sequential Function Chart)

+====================+     +==============+     +=====================+  
||                   ||     ||             ||     ||                    ||  
|| Initial State     ||--T1-||   PID Calc  ||--T2-||   Apply Adjustment ||  
|| (Read Pressure    ||     ||   (Read P,  ||     ||   (Control Valve   ||  
||  and Setpoint)    ||     ||    Calculate||     ||    Position V)     ||  
||                   ||     ||    Adjustment)||    ||                    ||  
+====================+     +==============+     +=====================+  
       |     A                   |   A                  |     A            
       |                         |                      |                  
       +-----------------<-------+----------------------+                  

Transitions:
T1: Triggered on system start or reset (goes to PID calculation).
T2: Executes when PID calculation complete (applies adjustment).

Actions:
A: Read sensors, calculate PID, adjust valve position accordingly.

(End of Sequential Function Chart)
```

This simple SFC diagram illustrates a continuous loop of:
1. **Initial State**: The system starts or resets, reading the initial pressure `P` and the setpoint `SP`.
2. **PID Calc**: The difference between `P` and `SP` is calculated, and the PID algorithm determines the necessary adjustment `A` to the valve position to minimize this error.
3. **Apply Adjustment**: The adjustment `A` is applied to the control valve `V`, influencing the reactor pressure.
4. The cycle repeats, reacting to changes in pressure by re-calculating and re-applying adjustments as necessary.

Note: Implementing the PID controller's detailed algorithm (calculating the proportional, integral, and derivative actions based on the error) is typically done within the "PID Calc" step, which would call a function or a block that encapsulates the PID logic. This logic is not detailed here due to its complexity and the need for tuning to the specific process characteristics.