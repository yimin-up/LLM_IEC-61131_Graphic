Creating a Sequential Function Chart (SFC) for a PID feedback control system for managing the level in a distillation column in ASCII art, following IEC 61131-3 standards, requires dividing the control logic into steps and transitions. Each step includes actions (e.g., reading the column level, calculating the PID control, updating the inlet valve position), and the transitions help in navigating between steps based on conditions (e.g., reaching a specific level).

Given the platform, I'll present a simplified SFC structure focusing on the PID control loop essentials. A fully functional SFC for a PID system typically involves initializing parameters, calculating error terms, updating control outputs, and handling errors or special conditions. 

**Note:** In a practical scenario, the implementation of the PID control will require tuning the PID parameters (Proportional, Integral, Derivative gains) according to the specific process dynamics. Here, it's assumed these parameters are predetermined.

```
+--------------------+
|      Start         |
+--------------------+
          |
          V
  +---------------+
  |  Initialize   |<--------------------------------------------------+
  +---------------+                                                   |
          |                                                           |
          |(True)                                                    |
          V                                                           |
  +---------------+    +----------------+      +------------------+  |
  | Read Level    |--->| Calculate PID  |--->  | Update Valve Pos |  |
  +---------------+    +----------------+      +------------------+  |
          |                    |                        |            |
          |                    |                        |            |
          |                    |                        |            |
          |(Every Scan Cycle)  | (Every Scan Cycle)     |(Every Scan Cycle)
          |                    V                        V            |
          |               +------------+           +--------------+  |
          +--------------->  Transition|---------->| Error Handle |  |
                              +--------+           +--------------+  |
                                                          |          |
                                                          +----------+
```
- **Initialize:** This step includes setting initial values for the PID loop, ensuring all variables are at their start states.

- **Read Level:** In this step, the current level of the distillation column is read. This could be through an analog input from a level sensor.

- **Calculate PID:** Based on the level read, this step calculates the required adjustment using a PID algorithm. The PID control logic computes the difference between the setpoint (desired level) and the measured level, then calculates the control variable (e.g., valve opening) needed to minimize this error.

- **Update Valve Position:** This step applies the control variable from the PID calculation to adjust the inlet valve's position, thereby controlling the flow rate into the distillation column and correcting the level.

- **Transition:** This condition always leads the control logic to loop back to reading the level and recalculating as long as the system is running. This allows for continuous control of the column level.

- **Error Handle:** Any errors or anomalies detected during the operation (for example, if the valve fails to adjust or the level sensor fails) would redirect the logic to this step. Error handling might include setting the system to a safe state, triggering alarms, etc.

This is a simplified overview. Each step can contain more detailed actions and conditions, and additional steps might be needed for comprehensive control and safety. Implementing an actual PID control also requires programming the PID algorithm, which involves numerical computations not detailed here. The structure above, however, lays out the conceptual pathway for such an application within the limitations of ASCII art.