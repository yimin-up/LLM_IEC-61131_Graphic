Creating a self-contained IEC 61131-3 Sequential Function Chart (SFC) program for cascade control of pressure in an oil refinery involves conceptualizing how the primary and secondary loops interact. In this context, the primary loop's purpose is to maintain the pressure at a desired level, while the secondary loop adjusts the flow of oil to meet the primary loop's setpoint requirements. 

The nature of an SFC does not support direct implementation in traditional programming languages or ASCII art due to its graphical nature and reliance on PLC-specific programming environments. However, what can be provided is a pseudo-implementation that outlines the steps and logic that would be employed in a real SFC designed for cascade control. This conceptual representation can guide the program's design in actual SFC-compatible software.

### Conceptual Cascade Control SFC Program

#### Initial Setup:

- **Step 1 - Idle State**: System Initialization.
  - Wait for system start command.

#### Primary Loop:

- **Step 2 - Measure Pressure**: Read the current pressure in the vessel.
- **Step 3 - Calculate Pressure Error**: Subtract the measured pressure from the desired setpoint.
- **Step 4 - Adjust Setpoint for Secondary Loop**: The output of the calculation in Step 3 directly becomes the setpoint for the secondary loop. This determines the required flow rate adjustment to maintain pressure.

#### Secondary Loop:

- **Step 5 - Measure Flow**: Read the current flow of oil into the vessel.
- **Step 6 - Calculate Flow Error**: Subtract the measured flow from the secondary loop setpoint (output of Step 4).
- **Step 7 - Adjust Flow**: Actuate valves to increase/decrease the flow based on the error calculated in Step 6.
- **Step 8 - Feedback to Primary Loop**: Adjustments in the flow influence the pressure, which is fed back to Step 2.

#### Loop:

- **Step 9 - Loop Condition Check**: 
  - If the primary loop's objectives are met (pressure stabilized), and no stop command is received, repeat from Step 2 or Step 5 based on real-time requirements.
  - If a stop command is received or an emergency condition occurs, proceed to the safe state.

#### Safe State:

- **Step 10 - System Shutdown**: Engage emergency shutdown procedures to safely halt operations and maintain the system in a safe state until reset or addressed.

### Notes on Implementation

- In a real SFC, transitions between each step are controlled by conditions (e.g., measuring times, error thresholds), and steps can be active concurrently if designed for parallel operation (common in cascade control).
- Actual SFC programming would involve configuring each of these steps as actions within the PLC programming environment, linking them with appropriate transition conditions based on process parameters.
- Specific IEC 61131-3 languages, like Structured Text (ST) for calculations or Continuous Function Chart (CFC) for broader system design, would be used to program the logic within each step.

This conceptual guide serves as an outline. The actual implementation would require detailed process knowledge, including the necessary safety margins, pressure and flow measurement techniques, and the specific control algorithms (PID controllers are common in such applications).