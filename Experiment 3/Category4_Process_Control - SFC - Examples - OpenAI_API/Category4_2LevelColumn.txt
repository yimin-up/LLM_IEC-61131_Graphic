Creating a complete and operational Sequential Function Chart (SFC) program for PID feedback control within the specifications of IEC 61131-3 involves specifying steps, actions, and transitions as well as incorporating PID control. For a distillation column level control, it is assumed that the desired level setpoint is predefined, and feedback is based on a level sensor within the column. The control output adjusts an inlet valve to maintain the desired level. We will abstractly represent how such a system could be outlined in IEC 61131-3 SFC. This simplified representation will be high-level and assume the existence of a PID function block compliant with IEC 61131-3.

Please note that actual implementation details like scaling of sensor input, PID tuning parameters (Kp, Ki, Kd), and specific function block interfaces can significantly vary between systems and are beyond the scope of this ASCII representation.

```plaintext
(Start of Sequential Function Chart)

       +-------------------------------------------------------<------------------------------------------------------+
       |                                                                                                              |
       |                                                                                                              |
+============+                                                                                                        |
||          ||                                                                                                        |
|| Initial  ||                                                                                                        |
||          ||                                                                                                        |
+============+                                                                                                        |
       |                                                                                                              |
       |                                                                                                              |
       + (Always)                                                                                                     |
       |                                                                                                              |
       |                                                                                                              |
+---------------+       +---------------------------+          +--------------------------+          +---------------+
|   Initialize  |       |   Check_Level_and_Update  |          |   Apply_Control_to_Valve  |          |   Hold_&_Monitor   |
|               |------>|                           |--------->|                           |--------->|                   |
| PID.Reset();  |       | PID.Compute();            |          | Valve.SetPosition(PID.Out);|          | Level.CheckStatus();|
+---------------+       +---------------------------+          +--------------------------+          +---------------+
       |                                                                                                              |
       |                                                                                                              |
       +------------------------------------------------------------------------------------------------------------->+

(End of Sequential Function Chart)
```

Explanation:
- **Initialize**: This initial step can include the resetting or initialization of the PID controller, setting its parameters if needed, and ensuring the system is ready to start. Actions could be PID.Reset();
- **Check_Level_and_Update**: This step involves reading the current level from the sensor, comparing it to the desired setpoint, and computing the new PID output based on the error. The PID computation is carried out here. Actions could be PID.Compute();
- **Apply_Control_to_Valve**: Based on the PID output, this step adjusts the inlet valve's position to regulate the level in the distillation column. The action here adjusts the valve according to the control signal output of the PID. Actions could be Valve.SetPosition(PID.Out);
- **Hold_&_Monitor**: In this ongoing step, the system continuously monitors the level to decide if further adjustments are necessary, allowing for transitions back to Check_Level_and_Update if needed. The control system remains in this state under normal conditions, continuously monitoring the process. Actions could be Level.CheckStatus();

This model assumes a continuous loop of feedback control where the system is regularly checking the level and adjusting the valve position accordingly. The actual implementation would need real function block calls with specific parameters, error handling routines, and possibly more detailed steps depending on requirements, such as safety checks or handling specific operational modes.